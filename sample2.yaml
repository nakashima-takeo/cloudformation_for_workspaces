AWSTemplateFormatVersion: '2010-09-09'
Description: 'CloudFormation template to create VPC, Simple AD, Windows WorkSpaces, and a user (Optimized for AWS Free Tier)'

Parameters:
  AdminPassword:
    Type: String
    Description: 'Password for the directory administrator'
    NoEcho: true

  UserName:
    Type: String
    Description: 'The username of the user for whom to provision the WorkSpace'

  UserPassword:
    Type: String
    Description: 'Password for the WorkSpace user'
    NoEcho: true

  BundleId:
    Type: String
    Description: 'The ID of the WorkSpaces bundle to use'

Resources:
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.0.0.0/16
      EnableDnsHostnames: true
      EnableDnsSupport: true
      InstanceTenancy: default
      Tags:
        - Key: Name
          Value: WorkSpaces VPC

  InternetGateway:
    Type: AWS::EC2::InternetGateway

  AttachGateway:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref VPC
      InternetGatewayId: !Ref InternetGateway

  PublicSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: 10.0.1.0/24
      AvailabilityZone: !Select 
        - 0
        - 'Fn::GetAZs': !Ref 'AWS::Region'
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: Public Subnet 1

  PublicSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: 10.0.2.0/24
      AvailabilityZone: !Select 
        - 1
        - 'Fn::GetAZs': !Ref 'AWS::Region'
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: Public Subnet 2

  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: Public Route Table

  PublicRoute:
    Type: AWS::EC2::Route
    DependsOn: AttachGateway
    Properties:
      RouteTableId: !Ref PublicRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway

  PublicSubnet1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubnet1
      RouteTableId: !Ref PublicRouteTable

  PublicSubnet2RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubnet2
      RouteTableId: !Ref PublicRouteTable

  WorkSpacesSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: "WorkSpaces Security Group"
      GroupDescription: "Security group for WorkSpaces"
      VpcId: !Ref VPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 4172
          ToPort: 4172
          CidrIp: 0.0.0.0/0
        - IpProtocol: udp
          FromPort: 4172
          ToPort: 4172
          CidrIp: 0.0.0.0/0
      SecurityGroupEgress:
        - IpProtocol: -1
          FromPort: -1
          ToPort: -1
          CidrIp: 0.0.0.0/0

  SimpleAD:
    Type: AWS::DirectoryService::SimpleAD
    Properties:
      Name: corp.example.com
      Password: !Ref AdminPassword
      Size: Small
      VpcSettings: 
        VpcId: !Ref VPC
        SubnetIds: 
          - !Ref PublicSubnet1
          - !Ref PublicSubnet2

  WorkSpacesDirectory:
    Type: AWS::WorkSpaces::Directory
    Properties:
      DirectoryId: !Ref SimpleAD
      SubnetIds:
        - !Ref PublicSubnet1
        - !Ref PublicSubnet2

  WorkSpaceUser:
    Type: AWS::DirectoryService::SimpleADUser
    Properties:
      DirectoryId: !Ref SimpleAD
      Username: !Ref UserName
      Password: !Ref UserPassword

  MyWorkspace:
    Type: AWS::WorkSpaces::Workspace
    DependsOn: WorkSpaceUser
    Properties:
      BundleId: !Ref BundleId
      DirectoryId: !Ref SimpleAD
      UserName: !Ref UserName
      RootVolumeEncryptionEnabled: true
      UserVolumeEncryptionEnabled: true
      VolumeEncryptionKey: 'alias/aws/workspaces'
      WorkspaceProperties:
        ComputeTypeName: VALUE
        RunningMode: AUTO_STOP
        RunningModeAutoStopTimeoutInMinutes: 60

Outputs:
  VPC:
    Description: A reference to the created VPC
    Value: !Ref VPC
    Export:
      Name: !Sub ${AWS::StackName}-VPCID

  PublicSubnets:
    Description: A list of the public subnets
    Value: !Join [ ",", [ !Ref PublicSubnet1, !Ref PublicSubnet2 ]]
    Export:
      Name: !Sub ${AWS::StackName}-PublicSubnets

  WorkSpacesSecurityGroup:
    Description: Security group for WorkSpaces
    Value: !Ref WorkSpacesSecurityGroup
    Export:
      Name: !Sub ${AWS::StackName}-WorkSpacesSecurityGroup

  DirectoryId:
    Description: Directory ID
    Value: !Ref SimpleAD
    Export:
      Name: !Sub ${AWS::StackName}-DirectoryId

  WorkspaceId:
    Description: 'The ID of the created WorkSpace'
    Value: !Ref MyWorkspace
